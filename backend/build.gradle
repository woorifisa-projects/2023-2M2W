plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.asciidoctor.jvm.convert' version '3.3.2' // 1
}

group = 'woorifisa.goodfriends.backend'
version = '0.0.1-SNAPSHOT'
java {
	sourceCompatibility = '11'
}
ext {
	snippetsDir = file('build/generated-snippets') // 2
}

configurations {
	asciidoctorExtensions
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// configuration 설치
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// JWT를 위한 의존성
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// s3연동을 위한 의존성
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.137'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// Rest docs를 위한 의존성
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor' // 5
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // 6

	// RestAssured
	testImplementation 'io.rest-assured:rest-assured:4.4.0'
}

tasks.named('test') { // 3
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') { // 4
	configurations 'asciidoctorExtensions'
	inputs.dir snippetsDir
	dependsOn test
}

task copyDocument(type: Copy) { // 7
	dependsOn asciidoctor

	from "${asciidoctor.outputDir}"
	into file("src/main/resources/static/docs")
}

bootJar {  // 8
	dependsOn copyDocument
}